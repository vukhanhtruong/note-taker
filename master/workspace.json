{
  "configuration" : { },
  "description" : "C4 Model for a simple note-taker application",
  "documentation" : {
    "sections" : [ {
      "content" : "# Note Taker Architecture\n\nThis site contains the C4 Model for a simple note-taking application\n",
      "filename" : "01-index.md",
      "format" : "Markdown",
      "order" : 1,
      "title" : ""
    }, {
      "content" : "# > Code-Level Class Diagram\n\nThe code designed by following Clean Architecture diagram, so the color-code is matter, pay attention please.\n\n![](/clean-arch.png)\n\nBelow are links to various code-level diagrams. Each link takes you to a dedicated page with detailed diagrams.\n\n- [User Diagram](/>>-user)\n- [Note Diagram](/>>-note)\n",
      "filename" : "02-class-diagrams.md",
      "format" : "Markdown",
      "order" : 2,
      "title" : ""
    }, {
      "content" : "# >> Note\n\nThis class diagram shows the code-level structure of the \"Create Note\" use case.\n\n```mermaid\nclassDiagram\n  direction TB\n  class Note {\n      + id: string\n      + title: string\n      + description: string\n      + createdBy: string\n      + archived: boolean\n  }\n\n  class CreateNewNoteUseCase {\n      + execute(payload: CreateNoteDTO): Note\n  }\n\n  class CreateNewNoteInteractor {\n      - noteRepository: NoteRepository\n      + execute(request: CreateNoteDTO): Note\n  }\n\n  class NoteRepository {\n      + getNoteById(id: UniqueID): Note;\n      + getNotesByUserId(userId: UniqueID): Note[];\n      + updateNote(note: Note): Note;\n      + deleteNote(id: UniqueID): Note;\n      + createNewNote(note: Note): Note;\n  }\n\n  class Controller {\n      + handle(request: Request): Response\n  }\n\n  class NoteRepositoryImplement {\n      + getNoteById(id: UniqueID): Note;\n      + getNotesByUserId(userId: UniqueID): Note[];\n      + updateNote(note: Note): Note;\n      + deleteNote(id: UniqueID): Note;\n      + createNewNote(note: Note): Note;\n  }\n\n  CreateNewNoteUseCase <|.. CreateNewNoteInteractor\n  CreateNewNoteInteractor --> NoteRepository : uses\n  CreateNewNoteInteractor --> Note : uses\n  Controller --> CreateNewNoteUseCase : invokes\n  NoteRepository <|.. NoteRepositoryImplement\n\n  %% Add custom class for styling\n  style Note fill:#ffffcc,stroke:#ffd700,stroke-width:2px\n  style CreateNewNoteUseCase fill:#ffcccc,stroke:#ff0000,stroke-width:2px\n  style CreateNewNoteInteractor fill:#ffcccc,stroke:#ff0000,stroke-width:2px\n  style NoteRepository fill:#ffcccc,stroke:#ff0000,stroke-width:2px\n  style Controller fill:#ccffcc,stroke:#00ff00,stroke-width:2px\n  style NoteRepositoryImplement fill:#ccffcc,stroke:#00ff00,stroke-width:2px\n\n```\n",
      "filename" : "0201-note.md",
      "format" : "Markdown",
      "order" : 3,
      "title" : ""
    }, {
      "content" : "# >> User\n\nThis class diagram shows the code-level structure of the \"Sign-In\" and \"Sign-Up\" use case.\n\n```mermaid\nclassDiagram\n  direction TB\n\n  %% Domain Entity\n  class User {\n      + id: string\n      + name: string\n      + email: string\n      + password: string\n      + role: string\n      + activated: boolean\n  }\n\n  %% Use Cases (Interfaces)\n  class SignUpUseCase {\n      + execute(email: string, password: string): User\n  }\n\n  class SignInUseCase {\n      + execute(email: string, password: string): User\n  }\n\n  %% Interactors (Implementation of Use Cases)\n  class SignUpInteractor {\n      - userRepository: UserRepository\n      + execute(email: string, password: string): User\n  }\n\n  class SignInInteractor {\n      - userRepository: UserRepository\n      + execute(email: string, password: string): User\n  }\n\n  %% Repository Interface\n  class UserRepository {\n      + create(user: User): User\n      + findByEmail(email: string): User\n  }\n\n  %% Controller & UserRepositoryImplement\n  class Controller {\n      + handleSignUp(request: Request): Response\n      + handleSignIn(request: Request): Response\n  }\n\n  class UserRepositoryImplement {\n      + create(user: User): User\n      + findByEmail(email: string): User\n  }\n\n  %% Relationships\n  SignUpUseCase <|.. SignUpInteractor\n  SignInUseCase <|.. SignInInteractor\n\n  SignUpInteractor --> UserRepository : uses\n  SignUpInteractor --> User : uses\n\n  SignInInteractor --> UserRepository : uses\n  SignInInteractor --> User : uses\n\n  Controller --> SignUpUseCase : invokes\n  Controller --> SignInUseCase : invokes\n\n  UserRepository <|.. UserRepositoryImplement\n\n  %% Styles\n  style User fill:#ffffcc,stroke:#ffd700,stroke-width:2px\n  style SignUpUseCase fill:#ffcccc,stroke:#ff0000,stroke-width:2px\n  style SignInUseCase fill:#ffcccc,stroke:#ff0000,stroke-width:2px\n  style SignUpInteractor fill:#ffcccc,stroke:#ff0000,stroke-width:2px\n  style SignInInteractor fill:#ffcccc,stroke:#ff0000,stroke-width:2px\n  style UserRepository fill:#ffcccc,stroke:#ff0000,stroke-width:2px\n  style Controller fill:#ccffcc,stroke:#00ff00,stroke-width:2px\n  style UserRepositoryImplement fill:#ccffcc,stroke:#00ff00,stroke-width:2px\n```\n",
      "filename" : "0202-user.md",
      "format" : "Markdown",
      "order" : 4,
      "title" : ""
    } ]
  },
  "id" : 0,
  "model" : {
    "people" : [ {
      "description" : "A person who writes, edits, and shares notes.",
      "id" : "1",
      "location" : "Unspecified",
      "name" : "User",
      "properties" : {
        "structurizr.dsl.identifier" : "user"
      },
      "relationships" : [ {
        "description" : "Uses via browser",
        "destinationId" : "3",
        "id" : "11",
        "properties" : {
          "structurizr.dsl.identifier" : "67f7e11d-bef7-4c60-b41c-bcf519ebe55d"
        },
        "sourceId" : "1",
        "tags" : "Relationship"
      }, {
        "description" : "Uses via browser",
        "destinationId" : "2",
        "id" : "12",
        "linkedRelationshipId" : "11",
        "sourceId" : "1"
      } ],
      "tags" : "Element,Person"
    } ],
    "softwareSystems" : [ {
      "containers" : [ {
        "description" : "A React SPA for user interactions.",
        "documentation" : { },
        "id" : "3",
        "name" : "React Frontend",
        "properties" : {
          "structurizr.dsl.identifier" : "webapp"
        },
        "relationships" : [ {
          "description" : "Sends requests (CRUD, Auth, Share)",
          "destinationId" : "4",
          "id" : "13",
          "properties" : {
            "structurizr.dsl.identifier" : "09e95c98-bd63-4be0-ab4f-1b571804f739"
          },
          "sourceId" : "3",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "React, Browser"
      }, {
        "components" : [ {
          "description" : "Invokes use cases for notes.",
          "documentation" : { },
          "id" : "5",
          "name" : "Note Controller",
          "properties" : {
            "structurizr.dsl.identifier" : "notecontroller"
          },
          "relationships" : [ {
            "description" : "Invokes notes's use cases",
            "destinationId" : "7",
            "id" : "14",
            "properties" : {
              "structurizr.dsl.identifier" : "9a4e80fd-e194-436c-9255-df36fc1719ff"
            },
            "sourceId" : "5",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "Hono"
        }, {
          "description" : "Invokes use cases for user authentication.",
          "documentation" : { },
          "id" : "6",
          "name" : "User Controller",
          "properties" : {
            "structurizr.dsl.identifier" : "usercontroller"
          },
          "relationships" : [ {
            "description" : "Invokes users's use cases",
            "destinationId" : "8",
            "id" : "15",
            "properties" : {
              "structurizr.dsl.identifier" : "fb3ca454-2d27-427b-aac3-acdeb1d2f85f"
            },
            "sourceId" : "6",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "Hono"
        }, {
          "description" : "Implements use cases for note.",
          "documentation" : { },
          "id" : "7",
          "name" : "Note Module",
          "properties" : {
            "structurizr.dsl.identifier" : "notemodule"
          },
          "relationships" : [ {
            "destinationId" : "9",
            "id" : "16",
            "properties" : {
              "structurizr.dsl.identifier" : "1ba039d3-9d4d-438d-bf2c-63dd393cadc8"
            },
            "sourceId" : "7",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "Clean Architecture"
        }, {
          "description" : "Implements use cases for user.",
          "documentation" : { },
          "id" : "8",
          "name" : "User Module",
          "properties" : {
            "structurizr.dsl.identifier" : "usermodule"
          },
          "relationships" : [ {
            "destinationId" : "9",
            "id" : "17",
            "properties" : {
              "structurizr.dsl.identifier" : "6a648d47-e435-4d1f-a4a0-d6fb421f652a"
            },
            "sourceId" : "8",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "Clean Architecture"
        }, {
          "description" : "Interacts with the D1 database.",
          "documentation" : { },
          "id" : "9",
          "name" : "Data Access Layer",
          "properties" : {
            "structurizr.dsl.identifier" : "componentdataaccess"
          },
          "relationships" : [ {
            "description" : "Executes queries",
            "destinationId" : "10",
            "id" : "18",
            "properties" : {
              "structurizr.dsl.identifier" : "f61c437b-400d-4637-bb9f-3240d67ec5e4"
            },
            "sourceId" : "9",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "SQL Queries/ ORM /D1 SDK"
        } ],
        "description" : "Handles auth, note CRUD, and sharing.",
        "documentation" : { },
        "id" : "4",
        "name" : "Backend API",
        "properties" : {
          "structurizr.dsl.identifier" : "backend"
        },
        "relationships" : [ {
          "description" : "Executes queries",
          "destinationId" : "10",
          "id" : "19",
          "linkedRelationshipId" : "18",
          "sourceId" : "4"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js, Hono, Cloudflare Workers"
      }, {
        "description" : "Stores users, notes, and sharing.",
        "documentation" : { },
        "id" : "10",
        "name" : "D1 Database",
        "properties" : {
          "structurizr.dsl.identifier" : "database"
        },
        "tags" : "Element,Container",
        "technology" : "Cloudflare D1"
      } ],
      "description" : "Allows users to sign up, sign in, and manage notes.",
      "documentation" : { },
      "id" : "2",
      "location" : "Unspecified",
      "name" : "Note Taker System",
      "properties" : {
        "structurizr.dsl.identifier" : "notetakersystem"
      },
      "tags" : "Element,Software System"
    } ]
  },
  "name" : "Note Taker App",
  "properties" : {
    "structurizr.dsl" : "d29ya3NwYWNlICJOb3RlIFRha2VyIEFwcCIgIkM0IE1vZGVsIGZvciBhIHNpbXBsZSBub3RlLXRha2VyIGFwcGxpY2F0aW9uIiB7CgogICAgIWRvY3MgImRvY3MiCgogICAgbW9kZWwgewogICAgICAgIHVzZXIgPSBwZXJzb24gIlVzZXIiICJBIHBlcnNvbiB3aG8gd3JpdGVzLCBlZGl0cywgYW5kIHNoYXJlcyBub3Rlcy4iCiAgICAgICAgCiAgICAgICAgbm90ZVRha2VyU3lzdGVtID0gc29mdHdhcmVTeXN0ZW0gIk5vdGUgVGFrZXIgU3lzdGVtIiAiQWxsb3dzIHVzZXJzIHRvIHNpZ24gdXAsIHNpZ24gaW4sIGFuZCBtYW5hZ2Ugbm90ZXMuIiB7CiAgICAgICAgICAgIHdlYkFwcCA9IGNvbnRhaW5lciAiUmVhY3QgRnJvbnRlbmQiICJBIFJlYWN0IFNQQSBmb3IgdXNlciBpbnRlcmFjdGlvbnMuIiAiUmVhY3QsIEJyb3dzZXIiCgogICAgICAgICAgICBiYWNrZW5kID0gY29udGFpbmVyICJCYWNrZW5kIEFQSSIgIkhhbmRsZXMgYXV0aCwgbm90ZSBDUlVELCBhbmQgc2hhcmluZy4iICJOb2RlLmpzLCBIb25vLCBDbG91ZGZsYXJlIFdvcmtlcnMiIHsKCiAgICAgICAgICAgICAgICBub3RlQ29udHJvbGxlciA9IGNvbXBvbmVudCAiTm90ZSBDb250cm9sbGVyIiAiSW52b2tlcyB1c2UgY2FzZXMgZm9yIG5vdGVzLiIgIkhvbm8iCiAgICAgICAgICAgICAgICB1c2VyQ29udHJvbGxlciA9IGNvbXBvbmVudCAiVXNlciBDb250cm9sbGVyIiAiSW52b2tlcyB1c2UgY2FzZXMgZm9yIHVzZXIgYXV0aGVudGljYXRpb24uIiAiSG9ubyIKCiAgICAgICAgICAgICAgICBub3RlTW9kdWxlID0gY29tcG9uZW50ICJOb3RlIE1vZHVsZSIgIkltcGxlbWVudHMgdXNlIGNhc2VzIGZvciBub3RlLiIgIkNsZWFuIEFyY2hpdGVjdHVyZSIKICAgICAgICAgICAgICAgIHVzZXJNb2R1bGUgPSBjb21wb25lbnQgIlVzZXIgTW9kdWxlIiAiSW1wbGVtZW50cyB1c2UgY2FzZXMgZm9yIHVzZXIuIiAiQ2xlYW4gQXJjaGl0ZWN0dXJlIgoKICAgICAgICAgICAgICAgIGNvbXBvbmVudERhdGFBY2Nlc3MgPSBjb21wb25lbnQgIkRhdGEgQWNjZXNzIExheWVyIiAiSW50ZXJhY3RzIHdpdGggdGhlIEQxIGRhdGFiYXNlLiIgIlNRTCBRdWVyaWVzLyBPUk0gL0QxIFNESyIKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZGF0YWJhc2UgPSBjb250YWluZXIgIkQxIERhdGFiYXNlIiAiU3RvcmVzIHVzZXJzLCBub3RlcywgYW5kIHNoYXJpbmcuIiAiQ2xvdWRmbGFyZSBEMSIKICAgICAgICB9CgogICAgICAgIC8vIFJlbGF0aW9uc2hpcHMKICAgICAgICB1c2VyIC0+IHdlYkFwcCAiVXNlcyB2aWEgYnJvd3NlciIKICAgICAgICB3ZWJBcHAgLT4gYmFja2VuZCAiU2VuZHMgcmVxdWVzdHMgKENSVUQsIEF1dGgsIFNoYXJlKSIKCiAgICAgICAgbm90ZUNvbnRyb2xsZXIgLT4gbm90ZU1vZHVsZSAiSW52b2tlcyBub3RlcydzIHVzZSBjYXNlcyIKICAgICAgICB1c2VyQ29udHJvbGxlciAtPiB1c2VyTW9kdWxlICJJbnZva2VzIHVzZXJzJ3MgdXNlIGNhc2VzIgoKICAgICAgICBub3RlTW9kdWxlIC0+IGNvbXBvbmVudERhdGFBY2Nlc3MgCiAgICAgICAgdXNlck1vZHVsZSAtPiBjb21wb25lbnREYXRhQWNjZXNzIAogICAgICAgIGNvbXBvbmVudERhdGFBY2Nlc3MgLT4gZGF0YWJhc2UgIkV4ZWN1dGVzIHF1ZXJpZXMiCiAgICB9CgogICAgdmlld3MgewogICAgICAgIHN5c3RlbWxhbmRzY2FwZSAiU3lzdGVtTGFuZHNjYXBlIiB7CiAgICAgICAgICAgIGluY2x1ZGUgKgogICAgICAgICAgICBhdXRvTGF5b3V0CiAgICAgICAgfQoKICAgICAgICBzeXN0ZW1jb250ZXh0IG5vdGVUYWtlclN5c3RlbSAiU3lzdGVtQ29udGV4dCIgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiU3lzdGVtIENvbnRleHQgZGlhZ3JhbSBmb3IgdGhlIE5vdGUgVGFrZXIgQXBwIgogICAgICAgICAgICBpbmNsdWRlIHVzZXIKICAgICAgICAgICAgaW5jbHVkZSBub3RlVGFrZXJTeXN0ZW0KICAgICAgICAgICAgYXV0b0xheW91dAogICAgICAgIH0KCiAgICAgICAgY29udGFpbmVyIG5vdGVUYWtlclN5c3RlbSAiQ29udGFpbmVycyIgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiQ29udGFpbmVyIGRpYWdyYW0gc2hvd2luZyBtYWpvciBlbGVtZW50cyIKICAgICAgICAgICAgaW5jbHVkZSAqCiAgICAgICAgICAgIGF1dG9MYXlvdXQKICAgICAgICB9CgogICAgICAgIGNvbXBvbmVudCBiYWNrZW5kICJCYWNrZW5kQ29tcG9uZW50cyIgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiQ29tcG9uZW50IGRpYWdyYW0gZm9yIHRoZSBCYWNrZW5kIEFQSSIKICAgICAgICAgICAgaW5jbHVkZSAqIAogICAgICAgICAgICBhdXRvTGF5b3V0CiAgICAgICAgfQoKCiAgICAgICAgc3R5bGVzIHsKICAgICAgICAgICAgZWxlbWVudCAiU29mdHdhcmUgU3lzdGVtIiB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kICMxMTY4YmQKICAgICAgICAgICAgICAgIGNvbG9yICNmZmZmZmYKICAgICAgICAgICAgfQogICAgICAgICAgICBlbGVtZW50ICJQZXJzb24iIHsKICAgICAgICAgICAgICAgIHNoYXBlIHBlcnNvbgogICAgICAgICAgICAgICAgYmFja2dyb3VuZCAjMDg0MjdCCiAgICAgICAgICAgICAgICBjb2xvciAjZmZmZmZmCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGVsZW1lbnQgIlNvZnR3YXJlIFN5c3RlbSIgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZCAjMTE2OGJkCiAgICAgICAgICAgICAgICBjb2xvciAjZmZmZmZmCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGVsZW1lbnQgIkNvbnRhaW5lciIgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZCAjNDM4ZGQ1CiAgICAgICAgICAgICAgICBjb2xvciAjZmZmZmZmCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGVsZW1lbnQgIkNvbXBvbmVudCIgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZCAjODViYmYwCiAgICAgICAgICAgICAgICBjb2xvciAjMDAwMDAwCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0K"
  },
  "views" : {
    "componentViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "4",
      "description" : "Component diagram for the Backend API",
      "elements" : [ {
        "id" : "5",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "6",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "7",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "8",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "9",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "10",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "key" : "BackendComponents",
      "order" : 4,
      "relationships" : [ {
        "id" : "14"
      }, {
        "id" : "15"
      }, {
        "id" : "16"
      }, {
        "id" : "17"
      }, {
        "id" : "18"
      } ]
    } ],
    "configuration" : {
      "branding" : { },
      "styles" : {
        "elements" : [ {
          "background" : "#1168bd",
          "color" : "#ffffff",
          "tag" : "Software System"
        }, {
          "background" : "#08427b",
          "color" : "#ffffff",
          "shape" : "Person",
          "tag" : "Person"
        }, {
          "background" : "#438dd5",
          "color" : "#ffffff",
          "tag" : "Container"
        }, {
          "background" : "#85bbf0",
          "color" : "#000000",
          "tag" : "Component"
        } ]
      },
      "terminology" : { }
    },
    "containerViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "description" : "Container diagram showing major elements",
      "elements" : [ {
        "id" : "1",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "3",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "4",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "10",
        "x" : 0,
        "y" : 0
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "Containers",
      "order" : 3,
      "relationships" : [ {
        "id" : "11"
      }, {
        "id" : "13"
      }, {
        "id" : "19"
      } ],
      "softwareSystemId" : "2"
    } ],
    "systemContextViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "description" : "System Context diagram for the Note Taker App",
      "elements" : [ {
        "id" : "1",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "2",
        "x" : 0,
        "y" : 0
      } ],
      "enterpriseBoundaryVisible" : true,
      "key" : "SystemContext",
      "order" : 2,
      "relationships" : [ {
        "id" : "12"
      } ],
      "softwareSystemId" : "2"
    } ],
    "systemLandscapeViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "elements" : [ {
        "id" : "1",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "2",
        "x" : 0,
        "y" : 0
      } ],
      "enterpriseBoundaryVisible" : true,
      "key" : "SystemLandscape",
      "order" : 1,
      "relationships" : [ {
        "id" : "12"
      } ]
    } ]
  }
}